package com.atishay.online.aadhaar;

import android.content.Context;
import android.content.Intent;
import android.graphics.Color;
import android.os.Bundle;
import android.os.Handler;
import android.support.design.widget.Snackbar;
import android.support.v7.widget.Toolbar;
import android.text.Html;
import android.text.TextUtils;
import android.view.View;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.Toast;

import com.atishay.online.AppBaseActivity;
import com.atishay.online.AtishayOnlineApp;
import com.atishay.online.BaseResponse;
import com.atishay.online.R;
import com.atishay.online.utils.Constants;
import com.atishay.online.utils.Loader;
import com.goldenmace.framework.utils.NetworkUtils;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

import butterknife.BindView;
import butterknife.ButterKnife;
import butterknife.OnClick;
import cn.pedant.SweetAlert.SweetAlertDialog;

import static com.atishay.online.R.id.aadhaar_txtAuthenticate;

/**
 * Created by Vishal Patel on 01,December,2016.
 * Atishay Online
 * GoldenMace IT Solutions
 * vishal@goldenmace.com
 */

public class AadhaarVerificationActivity extends AppBaseActivity implements AadhaarVerificationView,View.OnClickListener,CommonInterface {
    @BindView(R.id.toolbar)
    Toolbar mToolbar;
    @BindView(R.id.aadhaar_rlMain)
    RelativeLayout mAadhaarMainView;
    @BindView(R.id.txtAadhaarNumber)
    TextView mtxtAadhaarNumber;
    @BindView(R.id.txtAadhaarName)
    TextView mtxtAadhaarName;
    @BindView(R.id.aadhaar_edtNumber)
    EditText mAadhaarNumber;
    @BindView(R.id.aadhaar_edtName)
    EditText mAadhaarName;
    @BindView(R.id.aadhaar_cbDetails)
    CheckBox mAadhaarDetailsTerm;
    @BindView(R.id.loader)
    Loader mLoader;
    @BindView(R.id.aadhaar_txtAuthenticate)
    TextView mView;
    @BindView(R.id.layotp)
    LinearLayout otpView;
    @BindView(R.id.layfinger)
    LinearLayout fingerView;
    @BindView(R.id.otp_gen)
    TextView mGenerateotp;

    private AadhaarVerificationPresenter mAadhaarVerificationPresenter;
    private PvcValidatePresenter pvcValidatePresenter;

    private Context context = AadhaarVerificationActivity.this;
    private SweetAlertDialog pDialog;


    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_aadhaar_verification);
        ButterKnife.bind(this);
        setToolbar(mToolbar);
        mAadhaarVerificationPresenter = new AadhaarVerificationPresenter(this);

        pvcValidatePresenter = new PvcValidatePresenter(this);

        /**
         * Custom Toolbar with amount view
         */
        ButterKnife.<TextView>findById(this, R.id.toolbar_txtAmount).setText(getString(R.string.amount, AtishayOnlineApp.getAppInstance().getBalance()));
        ButterKnife.<TextView>findById(this, R.id.toolbar_txtTitle).setText(getString(R.string.aadhaar_verification));


        mtxtAadhaarNumber.setText(Html.fromHtml(getString(R.string.aadhaar_number)), TextView.BufferType.SPANNABLE);
        mtxtAadhaarName.setText(Html.fromHtml(getString(R.string.aadhaar_name)), TextView.BufferType.SPANNABLE);


        pDialog = new SweetAlertDialog(context, SweetAlertDialog.PROGRESS_TYPE);
        pDialog.getProgressHelper().setBarColor(Color.parseColor("#00668E"));
        pDialog.setTitleText("Loading");
        pDialog.setCancelable(false);

        mGenerateotp.setOnClickListener(this);

    }


    @Override
    public void onStart() {
        super.onStart();

        pvcValidatePresenter.getPvcValidate(mUsername,mPassword);

    }

    public void onRadioButtonClicked(View v) {


        RadioButton rb1 = (RadioButton) findViewById(R.id.otp);
        RadioButton rb2 = (RadioButton) findViewById(R.id.finger);



        boolean  checked = ((RadioButton) v).isChecked();


        switch(v.getId()){

            case R.id.otp:
                if(checked)

                   otpView.setVisibility(View.VISIBLE);
                   fingerView.setVisibility(View.GONE);

                break;

            case R.id.finger:
                if(checked)

                otpView.setVisibility(View.GONE);
                fingerView.setVisibility(View.VISIBLE);
                break;


        }


    }

        @OnClick(aadhaar_txtAuthenticate)
    public void doAadhaarAuthentication() {
        hideKeyboard();
        if ((NetworkUtils.isNetworkAvailable(AtishayOnlineApp.getAppInstance()))) {
            if (!TextUtils.isEmpty(mAadhaarNumber.getText().toString()) && !TextUtils.isEmpty(mAadhaarName.getText().toString()) && mAadhaarDetailsTerm.isChecked()) {
                Map<String, String> queryMap = new HashMap<>();
                queryMap.put(Constants.ApiKeys.USERNAME, mUsername);
                queryMap.put(Constants.ApiKeys.PASSWORD, mPassword);
                queryMap.put(Constants.ApiKeys.AADHAARNUMBER, mAadhaarNumber.getText().toString());
                queryMap.put(Constants.ApiKeys.AADHAARNAME, mAadhaarName.getText().toString());
                mAadhaarVerificationPresenter.doAadhaarVerification(queryMap);
                mView.setEnabled(false);
            } else {
                Snackbar.make(mAadhaarMainView, getResources().getString(R.string.error_field_required), Snackbar.LENGTH_SHORT).show();
            }
        } else {
            noInternetConnection();
        }
    }

    @OnClick(R.id.aadhaar_txtTransactionHistory)
    public void viewAadhaarTransHistory() {
        startActivity(new Intent(getApplicationContext(), AadhaarVerificationHistoryActivity.class));
    }

    @Override
    public void showLoader(String aMessage) {
        if (aMessage != null) {
            mLoader.setText(aMessage);
        }
        mLoader.setVisibility(View.VISIBLE);
    }

    @Override
    public void showLoader(int aResId) {
        if (aResId > 0) {
            mLoader.setText(getString(aResId));
        }
        mLoader.setVisibility(View.VISIBLE);
    }

    @Override
    public void hideLoader() {
        mLoader.setVisibility(View.GONE);
    }

    @Override
    public void noInternetConnection() {
        final Handler handler = new Handler();
        handler.postDelayed(new Runnable() {
            @Override
            public void run() {
                mView.setEnabled(true);
            }
        }, 10);
        Snackbar.make(mAadhaarMainView, getString(R.string.error_network_no_internet), Snackbar.LENGTH_LONG).show();
        hideLoader();
    }

    @Override
    public void apiError(String aError) {
        hideLoader();

    }

    @Override
    public void apiError(int aApiCode, String aError) {
        switch (aApiCode) {
            case Constants.APICODE.AADHAARVERIFICATION:
                Snackbar.make(mAadhaarMainView, aError, Snackbar.LENGTH_INDEFINITE).setAction(R.string.ok, new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        finish();
                    }
                }).show();
                break;
            default:
                Snackbar.make(mAadhaarMainView, aError, Snackbar.LENGTH_LONG).show();
                break;
        }
        super.apiError(aApiCode, aError);
    }

    @Override
    public void doAadhaarVerificationDetails(BaseResponse aBaseResponse) {
        Snackbar.make(mAadhaarMainView, aBaseResponse.getMsg(), Snackbar.LENGTH_INDEFINITE).setAction(R.string.ok, new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                finish();
            }
        }).show();
    }

    @Override
    public void onAadhaarVerificationHistoryFetched(ArrayList<AadhaarVerificationBean> aAadhaarVerificationResponses) {

    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        mAadhaarVerificationPresenter.clearReferences();
    }

    @Override
    public void onClick(View view) {

        switch (view.getId()) {

            case R.id.otp_gen:

                Toast.makeText(AadhaarVerificationActivity.this,"click",Toast.LENGTH_SHORT).show();

                break;
        }

    }

    @Override
    public void showFErrorMeassage() {

        Toast.makeText(AadhaarVerificationActivity.this,"Server error",Toast.LENGTH_SHORT).show();


    }

    @Override
    public void showFLoginSuccessMsg(String msg, String verifacation) {

        Toast.makeText(AadhaarVerificationActivity.this,msg,Toast.LENGTH_SHORT).show();


    }

    @Override
    public void showprogress() {

        pDialog.show();
    }

    @Override
    public void hideprogress() {


        pDialog.dismiss();
    }
}
