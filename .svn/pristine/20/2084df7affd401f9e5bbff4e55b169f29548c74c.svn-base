package com.atishay.online.history;

import com.atishay.online.AtishayOnlineApp;
import com.atishay.online.BaseResponse;
import com.atishay.online.R;
import com.atishay.online.utils.Constants;
import com.atishay.online.utils.RestApis;
import com.atishay.online.utils.RetrofitClientFactory;
import com.atishay.online.utils.network.ApiError;
import com.atishay.online.utils.network.RestApiCallback;
import com.goldenmace.framework.utils.NetworkUtils;

import java.io.IOException;

import retrofit2.Call;
import retrofit2.Callback;
import retrofit2.Response;

/**
 * Created by Atishay on 19-01-2018.
 */

public class UtilityComplainPresenter {

    private UtilityComplainView utilityComplainView;

    private RetrofitClientFactory clientFactory;

    private RestApis mRestApis;

    RestApiCallback<Object, ApiError<Object>> mApiCallback;



    public UtilityComplainPresenter(UtilityComplainView utilityComplainView, RestApiCallback<Object, ApiError<Object>> aApiCallback) {


        this.utilityComplainView = utilityComplainView;

        clientFactory = new RetrofitClientFactory();

        mRestApis = RetrofitClientFactory.get();

        this.mApiCallback = aApiCallback;


    }


    public void getUtilityHistory(String username,String password,String transid,String mobileno,String dispotion,String desc){


        utilityComplainView.showprogress();

        Call<UtilityComplainPojo> pojoCall = mRestApis.UtilityComplain(username,password,transid,mobileno,dispotion,desc);

        pojoCall.enqueue(new Callback<UtilityComplainPojo>() {
            @Override
            public void onResponse(Call<UtilityComplainPojo> call, Response<UtilityComplainPojo> response) {

                utilityComplainView.hideprogress();

                if(response.isSuccessful()) {


                    if (response.body().getResponseMessage().equals("SUCCESS")) {

                        utilityComplainView.showUtilitySuccessMsg(response.body().getResponseMessage());

                    } else
                        {
                            if (response.body().getResponseMessage().equals("FAILED")){

                                utilityComplainView.showUtilityfailedMsg(response.body().getResponseMessage());

                        }

                    }

                }

                else {

                    ApiError apiError;

                    if (response.errorBody() != null) {

                        try {
                            BaseResponse baseResponse = AtishayOnlineApp.getAppInstance().getGson().fromJson(response.errorBody().string(), BaseResponse.class);
                            apiError = new ApiError<Object>(response.code(), baseResponse.getMsg());
                        } catch (IOException aE) {
                            apiError = new ApiError<Object>(response.code(), NetworkUtils.getErrorMessageByHttpCode(AtishayOnlineApp.getAppInstance(), response.code()));
                        }
                    } else {
                        apiError = new ApiError<Object>(response.code(), NetworkUtils.getErrorMessageByHttpCode(AtishayOnlineApp.getAppInstance(), response.code()));
                    }

                    mApiCallback.onApiError(Constants.APICODE.POSTPAID_OPERATOR,apiError);
                }

                }

            @Override
            public void onFailure(Call<UtilityComplainPojo> call, Throwable t) {

                utilityComplainView.hideprogress();

                utilityComplainView.showFErrorMeassage(AtishayOnlineApp.getAppInstance().getString(R.string.error_network_client_error));

            }
        });


    }

}
