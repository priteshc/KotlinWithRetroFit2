/* * Copyright 2016 GoldenMace IT Solutions * *    Licensed under the Apache License, Version 2.0 (the "License"); *    you may not use this file except in compliance with the License. *    You may obtain a copy of the License at * *        http://www.apache.org/licenses/LICENSE-2.0 * *    Unless required by applicable law or agreed to in writing, software *    distributed under the License is distributed on an "AS IS" BASIS, *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. *    See the License for the specific language governing permissions and *    limitations under the License. */package com.atishay.online.myaccountrecharge;import android.content.Context;import android.graphics.Color;import android.support.v7.widget.RecyclerView;import android.text.Html;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.TextView;import com.atishay.online.R;import com.atishay.online.utils.Constants;import java.text.ParseException;import java.text.SimpleDateFormat;import java.util.ArrayList;import butterknife.BindView;import butterknife.ButterKnife;import static com.atishay.online.R.string.amount;import static com.atishay.online.R.string.atishay_vender_id;import static com.atishay.online.R.string.bankname;import static com.atishay.online.R.string.drid;import static com.atishay.online.R.string.mystatus;import static com.atishay.online.R.string.transactiontype;import static com.atishay.online.R.string.utrno;/** * Created by Vishal Patel on 25,October,2016. * Atishay Online * GoldenMace IT Solutions * vishal@goldenmace.com */public class AccountRechargeAdapter extends RecyclerView.Adapter<AccountRechargeAdapter.ReportViewHolder> {    public Context context;    private ArrayList<AccountRechargeReportBean> mReportList;    private SimpleDateFormat mSDFOld, mSDRtime,mSDFRequired;    public AccountRechargeAdapter(Context context, ArrayList<AccountRechargeReportBean> aReportList) {        this.context = context;        this.mReportList = aReportList;        mSDFRequired = new SimpleDateFormat("dd-MM-yyyy");        mSDFOld = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.FFF");        mSDRtime = new SimpleDateFormat("hh:mm a");    }    @Override    public ReportViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {        View itemView = LayoutInflater.from(parent.getContext())                .inflate(R.layout.item_myac_report, parent, false);        return new ReportViewHolder(itemView);    }    @Override    public void onBindViewHolder(final ReportViewHolder holder, int position) {        AccountRechargeReportBean data = mReportList.get(position);        try {            holder.mMyAccountDate.setText(mSDFRequired.format(mSDFOld.parse(data.getMyDate())));            holder.mTime.setText(mSDRtime.format(mSDFOld.parse(data.getMyDate())));        } catch (ParseException aE) {            aE.printStackTrace();        }        System.out.println("status:" +data.getMyStatus());        holder.mMyAccountDRID.setText(Html.fromHtml(String.format(context.getString(drid), String.valueOf(data.getDRID()))));      //  holder.mMyAccountDate.setText(data.getMyDate());        holder.mMyAccountVenderID.setText(Html.fromHtml(String.format(context.getString(atishay_vender_id), data.getAtishayVendorID())));        holder.mMyAccountType.setText(Html.fromHtml(String.format(context.getString(transactiontype), data.getTransactionType())));        holder.mMyAccountBankName.setText(Html.fromHtml(String.format(context.getString(bankname), data.getBankName())));        holder.mMyAccountUTRID.setText(Html.fromHtml(String.format(context.getString(utrno), data.getUTRNo())));        if (Constants.PENDING.equalsIgnoreCase(data.getMyStatus())) {            holder.mMyAccountStatus.setTextColor(context.getResources().getColor(R.color.orange));        } else if (Constants.REJECTED1.equalsIgnoreCase(data.getMyStatus())) {            holder.mMyAccountStatus.setTextColor(context.getResources().getColor(R.color.red));        } else if (Constants.APPROVED.equalsIgnoreCase(data.getMyStatus())) {            holder.mMyAccountStatus.setTextColor(context.getResources().getColor(R.color.green));        } else {            holder.mMyAccountStatus.setTextColor(Color.BLACK);        }        holder.mMyAccountStatus.setText(Html.fromHtml(String.format(context.getString(mystatus), data.getMyStatus())));        holder.mMyAccountRS.setText(Html.fromHtml(String.format(context.getString(amount), String.format("%.2f", data.getAmount()))));    }    @Override    public int getItemCount() {        return mReportList.size();    }    public class ReportViewHolder extends RecyclerView.ViewHolder {        @BindView(R.id.myac_txtDRID)        TextView mMyAccountDRID;        @BindView(R.id.myac_txtDate)        TextView mMyAccountDate;        @BindView(R.id.myac_txtVenderID)        TextView mMyAccountVenderID;        @BindView(R.id.myac_txtTransType)        TextView mMyAccountType;        @BindView(R.id.myac_txtBankName)        TextView mMyAccountBankName;        @BindView(R.id.myac_txtUTRID)        TextView mMyAccountUTRID;        @BindView(R.id.myac_txtTransStatus)        TextView mMyAccountStatus;        @BindView(R.id.myac_txtRS)        TextView mMyAccountRS;        @BindView(R.id.time)        TextView mTime;        public ReportViewHolder(View view) {            super(view);            ButterKnife.bind(this, view);        }    }}