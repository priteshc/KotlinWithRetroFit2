/*
 * Copyright 2016 Goldenmace IT Solutions
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

package com.atishay.online.changepassword;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;

import com.atishay.online.R;
import com.atishay.online.utils.Constants;
import com.goldenmace.framework.utils.SharedPrefUtils;

import butterknife.BindView;
import butterknife.ButterKnife;
import butterknife.OnClick;

/**
 * Created by Vishal Patel on 15,October,2016.
 * AtishayOnline
 * GoldenMace IT Solutions
 * vishal@goldenmace.com
 */

public class ChngPassFragment extends Fragment {

    @BindView(R.id.fpassword_edtUsername)
    EditText mFUsername;
    @BindView(R.id.fpassword_edtPassword)
    EditText mFPassword;
    @BindView(R.id.fpassword_edtNewPassword)
    EditText mFNewPassword;
    @BindView(R.id.fpassword_edtConfirmPassword)
    EditText mFConfirmPassword;
    private FragmentActionListener mActionListener;

    public static ChngPassFragment newInstance(FragmentActionListener aFragmentActionListener) {
        ChngPassFragment fragment = new ChngPassFragment();
        fragment.setActionListener(aFragmentActionListener);
        return fragment;
    }

    @Override
    public void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
    }

    @Nullable
    @Override
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        View rootView = inflater.inflate(R.layout.fragment_changepassword, container, false);
        ButterKnife.bind(this, rootView);
        mFUsername.setText(SharedPrefUtils.getString(getActivity(), Constants.SharedPref.USER_DETAIL, Constants.SharedPref.KEY_USER_NAME, ""));
        return rootView;
    }

    @OnClick(R.id.fpassword_txtSubmit)
    public void doSubmit() {
        if (mActionListener != null) {
            mFNewPassword.setError(null);
            mFConfirmPassword.setError(null);
            if (mFPassword.length() == 0) {
                // invalid Transaction code
                mFPassword.requestFocus();
                mFPassword.setError(getString(R.string.error_invalid_password));
            } else if (mFNewPassword.length() == 0) {
                // invalid Transaction code
                mFNewPassword.requestFocus();
                mFNewPassword.setError(getString(R.string.error_invalid_password));
            } else if (!mFNewPassword.getText().toString().equals(mFConfirmPassword.getText().toString())) {
                // password and new password not matched
                mFConfirmPassword.requestFocus();
                mFConfirmPassword.setError(getString(R.string.error_password_not_matched));
            } else {
                mActionListener.onRequestChangePassword(mFPassword.getText().toString(), mFNewPassword.getText().toString());
            }
        }
    }

    public void setActionListener(FragmentActionListener aActionListener) {
        mActionListener = aActionListener;
    }

    public void resetValues() {
        mFUsername.setText(null);
        mFPassword.setText(null);
        mFNewPassword.setText(null);
        mFConfirmPassword.setText(null);
    }

    public String getNewPassword() {
        return mFNewPassword.getText().toString();
    }
}
