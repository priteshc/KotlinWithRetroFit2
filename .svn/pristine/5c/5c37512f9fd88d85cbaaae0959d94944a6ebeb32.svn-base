/*
 * Copyright 2016 Goldenmace IT Solutions
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

package com.atishay.online.changepassword;

import android.content.Intent;
import android.os.Bundle;
import android.support.design.widget.Snackbar;
import android.support.design.widget.TabLayout;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentPagerAdapter;
import android.support.v4.view.ViewPager;
import android.support.v7.widget.Toolbar;
import android.view.View;
import android.widget.TextView;

import com.atishay.online.AppBaseActivity;
import com.atishay.online.AtishayOnlineApp;
import com.atishay.online.BaseResponse;
import com.atishay.online.R;
import com.atishay.online.login.LoginActivity;
import com.atishay.online.utils.Constants;
import com.atishay.online.utils.Loader;
import com.goldenmace.framework.utils.SharedPrefUtils;

import java.util.ArrayList;
import java.util.List;

import butterknife.BindView;
import butterknife.ButterKnife;

/**
 * Created by Vishal Patel on 15,October,2016.
 * AtishayOnline
 * GoldenMace IT Solutions
 * vishal@goldenmace.com
 */
public class TabChngPassActivity extends AppBaseActivity implements FragmentActionListener, TabChngPassView {


    @BindView(R.id.tabRLContainer)
    View mRLContainer;
    @BindView(R.id.toolbar)
    Toolbar mToolbar;
    @BindView(R.id.tab_tlTab)
    TabLayout mTabLayout;
    @BindView(R.id.tab_vpViewPager)
    ViewPager mViewPager;
    @BindView(R.id.tab_loader)
    Loader mLoader;

    private TabChngPassPresenter mTabChngPassPresenter;
    private ChngPassFragment mChngPassFragment;
    private ChngTransCodeFragment mChngTransCodeFragment;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_tab_changepassword);
        mTabChngPassPresenter = new TabChngPassPresenter(this);
        ButterKnife.bind(this);
        setToolbar(mToolbar);
        setupViewPager(mViewPager);
        mTabLayout.setupWithViewPager(mViewPager);

        /**
         * Custom Toolbar with amount view
         */
        ButterKnife.<TextView>findById(this, R.id.toolbar_txtAmount).setText(getString(R.string.amount, AtishayOnlineApp.getAppInstance().getBalance()));
        ButterKnife.<TextView>findById(this, R.id.toolbar_txtTitle).setText(getString(R.string.change_password));

    }

    private void setupViewPager(ViewPager aViewPager) {
        mChngPassFragment = ChngPassFragment.newInstance(this);
        mChngTransCodeFragment = ChngTransCodeFragment.newInstance(this);
        ViewPagerAdapter adapter = new ViewPagerAdapter(getSupportFragmentManager());
        adapter.addFragment(mChngPassFragment, getResources().getString(R.string.change_password));
        adapter.addFragment(mChngTransCodeFragment, getResources().getString(R.string.change_trans_code));
        aViewPager.setAdapter(adapter);
    }

    @Override
    public void onRequestChangePassword(String aOldPassword, String aNewPassword) {
        mTabChngPassPresenter.requestChangePassword(mUsername, aOldPassword, aNewPassword);
    }

    @Override
    public void onRequestChangeTransactionPassword(String aOldPassword, String aNewPassword) {
        mTabChngPassPresenter.requestChangeTransactionPassword(mUsername, mPassword, aOldPassword, aNewPassword);
    }

    @Override
    public void onTransactionCodeChanged(BaseResponse aSuccessResponse) {
        SharedPrefUtils.setString(this, Constants.SharedPref.USER_DETAIL, Constants.SharedPref.KEY_TRANSPASSWORD, mChngTransCodeFragment.getNewTransPassword());
        mChngTransCodeFragment.resetValues();
        Snackbar.make(mRLContainer, aSuccessResponse.getMsg(), Snackbar.LENGTH_LONG).setAction("OK", new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent redirectLogout = new Intent(getApplicationContext(), LoginActivity.class);
                redirectLogout.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_NEW_TASK);
                startActivity(redirectLogout);
                SharedPrefUtils.getSharedPreferences(getApplicationContext(), Constants.SharedPref.USER_DETAIL).edit().clear().apply();
                finish();
            }
        }).show();
    }

    @Override
    public void onPasswordChanged(BaseResponse aSuccessResponse) {
        SharedPrefUtils.setString(this, Constants.SharedPref.USER_DETAIL, Constants.SharedPref.KEY_PASSWORD, mChngPassFragment.getNewPassword());
        mChngPassFragment.resetValues();
        Snackbar.make(mRLContainer, aSuccessResponse.getMsg(), Snackbar.LENGTH_INDEFINITE).setAction("OK", new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent redirectLogout = new Intent(getApplicationContext(), LoginActivity.class);
                redirectLogout.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_NEW_TASK);
                startActivity(redirectLogout);
                SharedPrefUtils.getSharedPreferences(getApplicationContext(), Constants.SharedPref.USER_DETAIL).edit().clear().apply();
                finish();
            }
        }).show();
    }

    @Override
    public void apiError(String aError) {
        Snackbar.make(mRLContainer, aError, Snackbar.LENGTH_LONG).show();
        super.apiError(aError);
    }

    @Override
    public void showLoader(String aMessage) {
        if (aMessage != null) {
            mLoader.setText(aMessage);
        }
        mLoader.setVisibility(View.VISIBLE);
    }

    @Override
    public void showLoader(int aResId) {
        if (aResId > 0) {
            mLoader.setText(getString(aResId));
        }
        mLoader.setVisibility(View.VISIBLE);
    }

    @Override
    public void hideLoader() {
        mLoader.setVisibility(View.GONE);
    }

    @Override
    public void noInternetConnection() {
        Snackbar.make(mRLContainer, getString(R.string.error_network_no_internet), Snackbar.LENGTH_LONG).show();
        hideLoader();
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        mTabChngPassPresenter.clearReferences();
    }

    class ViewPagerAdapter extends FragmentPagerAdapter {
        private final List<Fragment> mFragmentList = new ArrayList<>();
        private final List<String> mFragmentTitleList = new ArrayList<>();

        public ViewPagerAdapter(FragmentManager manager) {
            super(manager);
        }

        @Override
        public Fragment getItem(int position) {
            return mFragmentList.get(position);
        }

        @Override
        public int getCount() {
            return mFragmentList.size();
        }

        public void addFragment(Fragment fragment, String title) {
            mFragmentList.add(fragment);
            mFragmentTitleList.add(title);
        }

        @Override
        public CharSequence getPageTitle(int position) {
            return mFragmentTitleList.get(position);
        }
    }
}
