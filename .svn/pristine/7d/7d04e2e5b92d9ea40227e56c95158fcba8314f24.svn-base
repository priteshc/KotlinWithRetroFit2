/* * Copyright 2016 GoldenMace IT Solutions * *    Licensed under the Apache License, Version 2.0 (the "License"); *    you may not use this file except in compliance with the License. *    You may obtain a copy of the License at * *        http://www.apache.org/licenses/LICENSE-2.0 * *    Unless required by applicable law or agreed to in writing, software *    distributed under the License is distributed on an "AS IS" BASIS, *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. *    See the License for the specific language governing permissions and *    limitations under the License. */package com.atishay.online.benefiaciary;import android.content.Context;import android.graphics.Color;import android.graphics.drawable.ShapeDrawable;import android.graphics.drawable.shapes.OvalShape;import android.os.Build;import android.support.v7.widget.CardView;import android.support.v7.widget.RecyclerView;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.TextView;import com.atishay.online.R;import java.security.SecureRandom;import java.util.ArrayList;import java.util.Random;import butterknife.BindView;import butterknife.ButterKnife;/** * Created by Vishal Patel on 16,October,2016. * AtishayOnline * GoldenMace IT Solutions * vishal@goldenmace.com */public class BeneficiaryAdapter extends RecyclerView.Adapter<BeneficiaryAdapter.BeneficiaryHolder> {    public Context context;    BeneficiaryView mBeneficiaryView;    private ArrayList<BeneficiaryListBean> mBeneficiaryList;    public BeneficiaryAdapter(Context context, ArrayList<BeneficiaryListBean> mBeneficiaryList, BeneficiaryView aBeneficiaryView) {        this.context = context;        this.mBeneficiaryList = mBeneficiaryList;        mBeneficiaryView = aBeneficiaryView;    }    @Override    public BeneficiaryHolder onCreateViewHolder(ViewGroup parent, int viewType) {        View itemView = LayoutInflater.from(parent.getContext())                .inflate(R.layout.item_beneficiary, parent, false);        Random rnd = new SecureRandom();        int color = Color.argb(255, rnd.nextInt(256), rnd.nextInt(256), rnd.nextInt(256));        BeneficiaryHolder holder = new BeneficiaryHolder(itemView);        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {            holder.mBeneficiaryTitle.setBackground(createShapeDrawable(color));        } else {            holder.mBeneficiaryTitle.setBackgroundDrawable(createShapeDrawable(color));        }        return holder;    }    @Override    public void onBindViewHolder(final BeneficiaryHolder holder, final int position) {        BeneficiaryListBean data = mBeneficiaryList.get(position);        String beneficiaryTitle = data.getName();        String newString = beneficiaryTitle.substring(0, 1);        holder.mBeneficiaryTitle.setAllCaps(true);        holder.mBeneficiaryTitle.setText(newString);        holder.mBeneficiaryName.setText(data.getName());        holder.mBeneficiaryBank.setText(data.getBankName());        holder.mBeneficiaryAccount.setText(data.getBankAccountNumber());        holder.mProfileCardView.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                mBeneficiaryView.callFundActivity(position);            }        });        holder.mBeneficiaryValidation.setEnabled(true);        if (data.getResponseMessage() == null) {            holder.mBeneficiaryValidation.setText(context.getResources().getString(R.string.unverified));            holder.mBeneficiaryValidation.setBackgroundResource(R.drawable.bg_rounded_corner_blue);            holder.mBeneficiaryValidation.setCompoundDrawablesWithIntrinsicBounds(0, 0, 0, 0);            holder.mBeneficiaryValidation.setTag(position);            holder.mBeneficiaryValidation.setOnClickListener(new View.OnClickListener() {                @Override                public void onClick(View v) {                    holder.mBeneficiaryValidation.setEnabled(false);                    mBeneficiaryView.doVerifyBeneficiary((Integer) v.getTag());                }            });        } else {            int img = R.drawable.ic_check_white_24dp;            int dimenValue = (int) context.getResources().getDimension(R.dimen.spacing_control);            holder.mBeneficiaryValidation.setPadding(dimenValue, dimenValue, 0, dimenValue);            holder.mBeneficiaryValidation.setCompoundDrawablesWithIntrinsicBounds(img, 0, 0, 0);            holder.mBeneficiaryValidation.setBackgroundResource(R.drawable.bg_rounded_corner_green);            holder.mBeneficiaryValidation.setText(context.getResources().getString(R.string.verify_beneficiary));            holder.mBeneficiaryValidation.setOnClickListener(null);        }    }    /**     * Swipe to remove Beneficiary item     * return position     *     * @param position     */    public void removeItem(int position) {        mBeneficiaryList.remove(position);        notifyItemRemoved(position);        notifyItemRangeChanged(position, mBeneficiaryList.size());    }    /**     * Create circle shape     *     * @param color     * @return shapedrawable     */    public ShapeDrawable createShapeDrawable(int color) {        ShapeDrawable badge = new ShapeDrawable(new OvalShape());        badge.setIntrinsicWidth(40);        badge.setIntrinsicHeight(40);        badge.getPaint().setColor(color);        return badge;    }    @Override    public int getItemCount() {        return mBeneficiaryList.size();    }    public class BeneficiaryHolder extends RecyclerView.ViewHolder {        @BindView(R.id.item_txtbeneficiary)        TextView mBeneficiaryTitle;        @BindView(R.id.item_txtbeneficiaryname)        TextView mBeneficiaryName;        @BindView(R.id.item_txtbank)        TextView mBeneficiaryBank;        @BindView(R.id.item_txtaccount)        TextView mBeneficiaryAccount;        @BindView(R.id.item_txtvalidation)        TextView mBeneficiaryValidation;        @BindView(R.id.item_cvBeneficiaryView)        CardView mProfileCardView;        public BeneficiaryHolder(View view) {            super(view);            ButterKnife.bind(this, view);        }    }}